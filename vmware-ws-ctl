#!/bin/sh
# $Id: vmware-ws-ctl,v 1.3 2012/07/10 19:42:15 friedman Exp $

docmd()
{
  echo + "$@" 1>&2
  "$@"
}

system()
{
    action=$1

    case ${EUID-${UID-`id -u`}} in
        0 ) : ;;
        * ) exec sudo "$0" "$action" system || exit $? ;;
    esac

    for svc in vmware vmware-USBArbitrator vmware-workstation-server
    do docmd systemctl $action $svc.service
    done
    exit $?
}

move_home()
{
    case $HOME in
        */etc/misc ) : ;;
        * ) HOME=$HOME/etc/misc ;;
    esac
    export HOME
}

set_vmguest_vmx()
{
    local os=$1
    local vmroot=${VMROOT-/export/vm/vmware}
    local vmdir
    local arch

    case $os in
        f[1-9][0-9] | f[1-9][0-9]-* ) os=fedora${os#f} ;;
    esac

    case $os in
        *-x64 ) arch=x86_64- os=${os%-x64} ;;
        *-x86 ) arch=x86-    os=${os%-x86} ;;
    esac

    vmx=
    for vmdir in $vmroot/$arch*$os* ; do
        for f in $vmdir/*.vmx ; do
            if [ -f "$f" ]; then
                case $vmx in
                   '' ) vmx=$f ;;
                    * ) exec 1>&2
                        echo "$progname: \"$1\": ambiguous vm name:"
                        for f in $vmroot/$arch*$os*/*.vmx ; do
                            f=${f#$vmroot/}
                            f=${f%%/*}
                            echo "$progname:		$f"
                        done
                        exit 1
                        ;;
                esac
            fi
        done
    done

    case $vmx in
        '' ) echo "$progname: \"$1\": no match" 1>&2
             exit 1 ;;
    esac

    echo $vmx
    exit 0
}

vmcmd()
{
    local cmd=$1
    local vmguest=$2
    shift
    shift

    set_vmguest_vmx $vmguest
    move_home
    cd /

    docmd vmrun $cmd $vmx "$@"
}

main()
{
    progname=${0##*/}

    case $# in
        0|1 ) exec 1>&2
            echo "Usage:"
            echo "	$progname [start|stop] system"
            echo "	$progname start    vmguest {gui|*nogui*}"
            echo "	$progname stop     vmguest {hard|*soft*}"
            echo "	$progname suspend  vmguest {hard|*soft*}"
            echo "	$progname reset    vmguest {hard|*soft*}"
            echo "	$progname pause    vmguest"
            echo "	$progname unpause  vmguest"
            echo
            echo "Asterisked flags are the default."
            echo "Vmguest can be any unambiguous abbreviation."
            echo "Appending -x86 or -x64 will resolve arch differences."
            echo "Fedora systems can be abbreviated f14 -> fedora14"
            exit 1 ;;
    esac

    local cmd=$1
    local vmguest=$2
    shift
    shift

    case $vmguest in
        system ) $vmguest $cmd ;;
    esac

    case $cmd in
        start   ) vmcmd $cmd $vmguest ${1-nogui} ;;
        stop    ) vmcmd $cmd $vmguest ${1-soft}  ;;
        suspend ) vmcmd $cmd $vmguest ${1-hard}  ;;
        reset   ) vmcmd $cmd $vmguest ${1-soft}  ;;
        pause   ) vmcmd $cmd $vmguest            ;;
        unpause ) vmcmd $cmd $vmguest            ;;

        * ) echo "$cmd: unknown command" 1>&2 ; exit 1 ;;
    esac
}

main "$@"

# eof
