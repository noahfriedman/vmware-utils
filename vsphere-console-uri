#!/usr/bin/env python
# $Id: vsphere-console-uri,v 1.3 2018/03/23 20:00:21 friedman Exp $

from __future__ import print_function

from vspherelib import *

import OpenSSL
import time

def get_args():
    parser = get_args_setup()
    parser.add_argument( 'vm', nargs='*', help='optional vm names, default display all' )

    args = parser.parse_args()
    if not args.vm:
        printerr( 'Specify VM name' )
        sys.exit (1)

    return args


def print_uri_vmrc( vmrc ):
    print( 'vmrc://clone:%(session)s@%(vc_fqdn)s/?moid=%(vmoid)s' % vars( vmrc ))

def print_uri_html5( vmrc ):
    vmrc.host = 'vcenter-html5-client-testing'
    vmrc.port = '9443'
    vmrc.path = '/ui/webconsole.html'

    print( 'https://', vmrc.host, ':', vmrc.port, vmrc.path,
                    '?vmId=', vmrc.vmoid,
                  '&vmName=', vmrc.vmname,
              '&serverGuid=', vmrc.serverGUID,
                    '&host=', vmrc.vc_fqdn,
           '&sessionTicket=', vmrc.session,
              '&thumbprint=', vmrc.fprint,
           sep='' )

def main():
    args = get_args()
    si   = hconnect( args )
    content = si.content

    vmrc = args
    vmrc.serverGUID = content.about.instanceUuid
    vmrc.session = content.sessionManager.AcquireCloneTicket()
    vmrc.vc_fqdn = get_attr( content.setting.setting, 'VirtualCenter.FQDN' )

    vc_cert      = ssl.get_server_certificate( (args.host, int( args.port )) )
    vc_pem       = OpenSSL.crypto.load_certificate( OpenSSL.crypto.FILETYPE_PEM, vc_cert )
    vmrc.fprint  = vc_pem.digest( 'sha1' )

    vmlist = get_obj( si, [vim.VirtualMachine], { 'name' : args.vm } )
    for vm in vmlist:
        vmrc.vmname = vm.name
        vmrc.vmoid  = str( vm._moId )

        if len(vmlist) > 1:
            print_uri_vmrc( vmrc )
            print_uri_html5( vmrc )
            print( '' )
        else:
            print_uri_vmrc( vmrc )
            print( '' )
            print_uri_html5( vmrc )
            print( '' )

    # The tickets are only good until session is disconnected.
    print( 'You have 2 minutes to connect before ticket expires.' )
    time.sleep( 60 )
    print( '1 minute remaining before ticket expires.' )
    time.sleep( 60 )


if __name__ == '__main__':
    main()
